// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/workflow-definitions": {
            "get": {
                "description": "Retrieve a list of all workflow definitions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Get all workflow definitions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowDefinition"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new workflow definition",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Create a new workflow definition",
                "parameters": [
                    {
                        "description": "Workflow Definition Data",
                        "name": "workflow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateWorkflowDefinitionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinition"
                        }
                    }
                }
            }
        },
        "/workflow-definitions/search": {
            "post": {
                "description": "Search for workflow definitions based on criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Search workflow definitions",
                "parameters": [
                    {
                        "description": "Search Criteria",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchWorkflowDefinitionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkflowDefinition"
                            }
                        }
                    }
                }
            }
        },
        "/workflow-definitions/{id}": {
            "get": {
                "description": "Retrieve a single workflow definition by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Get a workflow definition by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow Definition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinition"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing workflow definition by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Update an existing workflow definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow Definition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workflow Definition Data",
                        "name": "workflow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateWorkflowDefinitionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinition"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a workflow definition by its ID",
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Delete a workflow definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow Definition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/workflow-definitions/{id}/disable": {
            "patch": {
                "description": "Disable a workflow definition by its ID",
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Disable a workflow definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow Definition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinition"
                        }
                    }
                }
            }
        },
        "/workflow-definitions/{id}/enable": {
            "patch": {
                "description": "Enable a workflow definition by its ID",
                "tags": [
                    "workflow-definitions"
                ],
                "summary": "Enable a workflow definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow Definition ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDefinition"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateWorkflowDefinitionRequest": {
            "type": "object",
            "required": [
                "name",
                "steps",
                "version"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowStep"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "DecisionCase": {
            "description": "A single case within a decision workflow step, defining a condition and the next step to take if the condition is met.",
            "type": "object",
            "properties": {
                "condition": {
                    "type": "string"
                },
                "nextStepId": {
                    "type": "string"
                }
            }
        },
        "DecisionWorkflowStep": {
            "description": "A workflow step that makes a decision based on conditions to determine the next step.",
            "type": "object",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DecisionCase"
                    }
                }
            }
        },
        "ForkBranch": {
            "description": "A single branch within a fork workflow step, defining the next step to take.",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "nextStepId": {
                    "type": "string"
                }
            }
        },
        "ForkWorkflowStep": {
            "description": "A workflow step that forks into multiple branches.",
            "type": "object",
            "properties": {
                "branches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForkBranch"
                    }
                }
            }
        },
        "HttpWorkflowStep": {
            "description": "A workflow step that performs an HTTP request.",
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string"
                },
                "nextStepId": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "JoinWorkflowStep": {
            "description": "A workflow step that joins multiple incoming steps into one.",
            "type": "object",
            "properties": {
                "incomingSteps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nextStepId": {
                    "type": "string"
                },
                "originId": {
                    "type": "string"
                }
            }
        },
        "ScriptWorkflowStep": {
            "description": "A workflow step that executes a script.",
            "type": "object",
            "properties": {
                "nextStepId": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                }
            }
        },
        "SearchWorkflowDefinitionsRequest": {
            "type": "object",
            "properties": {
                "draft": {
                    "type": "boolean"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "majorVersion": {
                    "type": "integer",
                    "minimum": 0
                },
                "minorVersion": {
                    "type": "integer",
                    "minimum": 0
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "patchVersion": {
                    "type": "integer",
                    "minimum": 0
                },
                "release": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "SubWorkflowStep": {
            "description": "A workflow step that invokes a sub-workflow.",
            "type": "object",
            "properties": {
                "nextStepId": {
                    "type": "string"
                },
                "workflowId": {
                    "type": "string"
                }
            }
        },
        "TaskWorkflowStep": {
            "description": "A simple task workflow step that performs a specific action.",
            "type": "object",
            "required": [
                "taskDefinitionId"
            ],
            "properties": {
                "nextStepId": {
                    "type": "string"
                },
                "taskDefinitionId": {
                    "type": "string"
                }
            }
        },
        "TerminateWorkflowStep": {
            "description": "A workflow step that terminates the workflow execution.",
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "UpdateWorkflowDefinitionRequest": {
            "type": "object",
            "required": [
                "steps"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowStep"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "WaitWorkflowStep": {
            "description": "A workflow step that waits for a specified duration before proceeding.",
            "type": "object",
            "properties": {
                "duration": {
                    "description": "e.g., \"5m\", \"1h\"",
                    "type": "string"
                },
                "nextStepId": {
                    "type": "string"
                }
            }
        },
        "WorkflowDefinition": {
            "description": "A workflow definition defines the structure and behavior of a workflow, including its steps and metadata.",
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowStep"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "WorkflowStep": {
            "description": "A step within a workflow, defining its type and specific configurations.",
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "decision": {
                    "$ref": "#/definitions/DecisionWorkflowStep"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "fork": {
                    "$ref": "#/definitions/ForkWorkflowStep"
                },
                "http": {
                    "$ref": "#/definitions/HttpWorkflowStep"
                },
                "id": {
                    "type": "string"
                },
                "join": {
                    "$ref": "#/definitions/JoinWorkflowStep"
                },
                "script": {
                    "$ref": "#/definitions/ScriptWorkflowStep"
                },
                "subWorkflow": {
                    "$ref": "#/definitions/SubWorkflowStep"
                },
                "task": {
                    "$ref": "#/definitions/TaskWorkflowStep"
                },
                "terminate": {
                    "$ref": "#/definitions/TerminateWorkflowStep"
                },
                "type": {
                    "$ref": "#/definitions/WorkflowStepType"
                },
                "wait": {
                    "$ref": "#/definitions/WaitWorkflowStep"
                }
            }
        },
        "WorkflowStepType": {
            "type": "string",
            "enum": [
                "task",
                "fork",
                "join",
                "decision",
                "subworkflow",
                "wait",
                "script",
                "http",
                "terminate"
            ],
            "x-enum-varnames": [
                "WorkflowStepTypeTask",
                "WorkflowStepTypeFork",
                "WorkflowStepTypeJoin",
                "WorkflowStepTypeDecision",
                "WorkflowStepTypeSubWorkflow",
                "WorkflowStepTypeWait",
                "WorkflowStepTypeScript",
                "WorkflowStepTypeHttp",
                "WorkflowStepTypeTerminate"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
